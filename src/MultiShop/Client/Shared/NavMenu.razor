@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Configuration

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject IConfiguration Configuration


<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="">
        <img src="100x100.png" width="30" height="30" class="d-inline-block align-top">
        MultiShop
    </a>
    <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class=@NavMenuCssClass>
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="search" Match="NavLinkMatch.Prefix">
                    <span class="oi oi-magnifying-glass"></span> Search
                </NavLink>
            </li>
        </ul>
        <ul class="navbar-nav ml-auto">
            <AuthorizeView Context="auth">
                <Authorized>
                    <li class="nav-item">
                        <a class="nav-link" href="authentication/profile">Hello, @auth.User.Identity.Name!</a>
                    </li>
                    <li class="nav-item">
                        <button class="nav-link btn btn-outline-primary" @onclick="BeginSignOut">Log out</button>
                    </li>
                </Authorized>
                <NotAuthorized>
                    @if (Configuration["IdentityServer:Registration"].Equals("enabled"))
                    {
                        <li class="nav-item">
                            <a class="nav-link" href="authentication/register">Register</a>
                        </li>
                    }
                    <li class="nav-item">
                        <a class="nav-link" href="authentication/login">Log in</a>
                    </li>
                </NotAuthorized>
            </AuthorizeView>
        </ul>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => (collapseNavMenu ? "collapse " : " ") + "navbar-collapse";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

}
