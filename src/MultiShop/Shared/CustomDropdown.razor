@inject IJSRuntime JS

<div style="position: relative;" @ref="dropdown">
    <button type="button" class=@ButtonCss>@ButtonContent</button>
    <div class="invisible" style="position: absolute;" tabindex="0">
        @DropdownContent
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment ButtonContent { get; set; }

    [Parameter]
    public RenderFragment DropdownContent { get; set; }

    [Parameter]
    public string AdditionalButtonClasses { get; set; }

    [Parameter]
    public string Justify { get; set; }

    private ElementReference dropdown;
    private string ButtonCss
    {
        get => "btn " + AdditionalButtonClasses;
    }

    protected override async Task OnParametersSetAsync()
    {
        AdditionalButtonClasses = AdditionalButtonClasses ?? "";
        Justify = Justify ?? "center";
        await base.OnParametersSetAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("customDropdown", dropdown, Justify);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

}
